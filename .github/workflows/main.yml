name: Build JAR with Maven and Oracle JDK 23

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # Step 2: Set up Oracle JDK 23
      - name: Set up Oracle JDK 23
        uses: actions/setup-java@v4.5.0
        with:
          distribution: oracle
          java-version: 23

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v4.1.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Install required tools
      - name: Install required tools
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils xmlstarlet


      # Step 5: Increment version in pom.xml
      - name: Increment version
        id: version
        run: |
          # Extract current version from pom.xml
          CURRENT_VERSION=$(xmllint --xpath "string(//project/version)" pom.xml)
          MAJOR_VERSION=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR_VERSION=$(echo $CURRENT_VERSION | cut -d. -f2)
          NEW_MINOR_VERSION=$((MINOR_VERSION + 1))
          NEW_VERSION="$MAJOR_VERSION.$NEW_MINOR_VERSION"
          echo "New version: $NEW_VERSION"

          # Safely update the version using xmlstarlet
          xmlstarlet ed --inplace -u "//_:project/_:version" -v "$NEW_VERSION" pom.xml
          
          # Output the new version for later steps
          echo "new-version=$NEW_VERSION" >> $GITHUB_ENV

      # Step 6: Build the JAR file with Maven
      - name: Build with Maven
        run: mvn clean package

      # Step 7: Create an executables folder
      - name: Create executables folder
        run: mkdir -p executables

      # Step 8: Move the JAR file to the executables folder
      - name: Move JAR file
        run: |
          NEW_VERSION=${{ steps.version.outputs.new-version }}
          mv target/*.jar "executables/AdventCalender-$NEW_VERSION.jar"

      # Step 9: Commit and push the updated pom.xml and JAR file
      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add pom.xml executables/
          git commit -m "Update version to ${{ steps.version.outputs.new-version }} and add JAR file"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
